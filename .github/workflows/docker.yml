name: Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths:
      - Dockerfile
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/docker.yml'
  pull_request:
    branches:
      - main
    paths:
      - Dockerfile
      - '**.go'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:

env:
  IMAGE_NAME: mdeous/plasmid

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      packages: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Log into GitHub container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: mdeous
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get plasmid version
        id: get_version
        run: |
          version=""
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            version="nightly"
          else
            version="$(make version)"
          fi
          echo "Version: ${version}"
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
        with:
          install: true

      - name: Pull latest image
        run: docker pull ghcr.io/${IMAGE_NAME}:latest
        continue-on-error: true

      - name: Build image
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6.12.0
        with:
          pull: true
          push: false
          cache-from: ghcr.io/${{ env.IMAGE_NAME }}:latest
          tags: ${{ env.IMAGE_NAME }}:ci
          outputs: type=docker,dest=/tmp/image.tar
          build-args: "VERSION=${{ steps.get_version.outputs.version }}"

      - name: Upload image archive
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        with:
          name: plasmid-image
          path: /tmp/image.tar

  publish:
    name: Publish
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        registry:
          - ghcr.io
          - docker.io
        include:
          - registry: ghcr.io
            secret: GITHUB_TOKEN
          - registry: docker.io
            secret: DOCKER_TOKEN

    steps:
      - name: Download image archive
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
        with:
          name: plasmid-image
          path: /tmp/

      - name: Import image
        run: docker load --input /tmp/image.tar

      - name: Log into Docker registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ matrix.registry }}
          username: mdeous
          password: ${{ secrets[matrix.secret] }}

      - name: Get image version
        id: get_version
        run: |
          version=""
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            version="latest"
          else
            version="${GITHUB_REF##*/}"
          fi
          echo "Image version: ${version}"
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Tag image
        run: docker tag ${IMAGE_NAME}:ci ${{ matrix.registry }}/${IMAGE_NAME}:${IMAGE_VERSION}
        env:
          IMAGE_VERSION: ${{ steps.get_version.outputs.version }}

      - name: Tag latest image
        if: ${{ steps.get_version.outputs.version }} != 'latest'
        run: docker tag ${IMAGE_NAME}:ci ${{ matrix.registry }}/${IMAGE_NAME}:latest

      - name: Push image to container registry
        run: docker push ${{ matrix.registry }}/${IMAGE_NAME}:${IMAGE_VERSION}
        env:
          IMAGE_VERSION: ${{ steps.get_version.outputs.version }}

      - name: Push latest image to container registry
        if: ${{ steps.get_version.outputs.version }} != 'latest'
        run: docker push ${{ matrix.registry }}/${IMAGE_NAME}:latest
